#include "stdafx.h"
#include <iostream>
#include <windows.h>
#include <conio.h>
#include <ctime>


struct CoordinatesSnakeField
{
	short _x, _y; // ??????????? ? ???????????? (?? ???????????? ?????????? ????? (? custom ? level ?????)) ????
};

struct CoordinatesObjects
{
	unsigned short appleX, appleY; // ?????????? ??????
};

struct settings
{
	bool walls; // ??????? ????
	bool SCrossing; // 1 - ??????, 0 - ???????? ??????
};

struct counters
{
	unsigned short len = 2; // ????? ????
	unsigned long score = 0; // ?????????
	unsigned short applec = 0; // ???? ?????
};

struct icons
{
	// char-??????????, ??????????? ??? ??????????? ???????? ?????? ???????? ?????????? ?? ????? (????? ????????)
	char SumbolField = ' '; // ?????? ?????? ?????? ????
	char SumbolWall = '#'; // ?????? ?????
	char SumbolSnakeHead = '0'; // ?????? ??????? ??????
	char SumbolSnakeTrunk = 'o'; // ?????? ???????? ????????
	char SumbolApple = '@'; // ?????? ??????
	char SumbolAppleInside = 'O'; // ?????? ????????????? ??????
};

struct t
{
	long GameTime; // ??????? ????? ???? (? ????????)
	short time; // c?????? ???-?? ????????? ? ???? ($)
};


using namespace std;


// ???????:
// ?????? ????????? ???????? ???? ? ?. ?.
void Settings(settings &set); // ???? ????????? ?????????????
void InputSettings(bool &Switch, short &key); // ???? ????????
void Setup(bool &GameOver, CoordinatesSnakeField &XYSF, counters &counter, icons &icon, settings &set); // ????????? ??????? ????

// ??????? ????
void Draw(const counters &counter); // ?????? ???? ???????? ???????? ? ??????? ?????????????? ??????????

void Input(bool &GameOver, CoordinatesSnakeField &XYSF); // ?????????? (????) ????? ?????????

void GenerationObjects(const counters &counter, const icons &icon); // ????????? ????????? (??????, $, ????????? ?????? ? ????)

void Move(CoordinatesSnakeField &XYSF, const counters &counter, const icons &icon); // ??????????? ???????? ??????? ?? ?????????? ??????? ???????

void Logic(bool &GameOver, CoordinatesSnakeField &XYSF, CoordinatesObjects XYObj,
		   const settings &set, counters &counter, const icons &icon); // ?????????? ??????? ???????? ?? ???????????? ????? ???????? ? ?????, ???????? ????-????

void WinFunc(); // ?????????? ? ?????????? ??????????

int main()
{
	bool GameOver; // ????? ????
	CoordinatesSnakeField XYSF; // XYSF (????, ?????????? ???? ? ????????? ??????????, ????????? ? ????? ? ?????)
	CoordinatesObjects XYObj; // XYObj (?????????? ????????)
	settings set; // set (?????????)
	counters counter; // counter (???????)
	icons icon; // icon (char-???????, ????????)
	t time; // time (??????????, ????????? ???????????? ?????)
	// unsigned long iteration = 0; // ?????????? ???????? ?? ???? ????


	unsigned short widthX = 40, heightY = 20; // ?????? ? ?????? ????

	char **field; // ????????? ?? ?????? ?????????? (??????? ????)
	field = new char*[heightY + 2]; // ???????? ?????? ??? (heightY + 2)-??????????? ??????? ?????????? ???????? ????

	// ???????? ?????? ??? (widthX + 3)-??????????? ??????? ???????? ????
	for (int i = 0; i < (heightY + 2); i++)
		field[i] = new char[widthX + 3];
	
	// ? ????? ??????????: char field[heightY + 2][widthX + 3]; // field[y(??????)][x(???????)] - ??????? ????


	unsigned short Slen; // ???????????? ????? ????, ???? ?????????? ??????? ?? ?????? ? ????????? ???????
	unsigned short *snakeX, *snakeY; // ????????? ?? ?????????? ??????? ????????? ????
	snakeX = new unsigned short [Slen]; // ???????? ?????? ??? Slen-??????????? ??????????? ??????? X-????????? ????
	snakeY = new unsigned short[Slen]; // ???????? ?????? ??? Slen-??????????? ??????????? ??????? Y-????????? ????

	/*
	// ??????? ? ????????? ?????????????? ??????
	cout << '\n';
	cout << "          FOR COMFORTABLE GAME TURN ON A FULL SCREEN MODE.";
	cout << "\n\n";
	*/

    do
    {
		Settings(set);
		Setup(GameOver, XYSF, counter, icon, set);

		do
		{
			//iteration++; // Debug ??????????

			Draw(counter); // ????? ???????????? ????????? ??????
			Input(GameOver, XYSF);
			GenerationObjects(counter, icon);
			Move(XYSF, counter, icon);
			Logic(GameOver, XYSF, XYObj, set, counter, icon);

			Sleep(100); // ????? ????????? ???????? ??? ?? ????????? ??????? (3 ??????)
		} while ((!GameOver) && (key != 27));

		if (GameOver) // ????? ??????? ????????? ???????
		{
			bool Switch = TRUE; // ??????????
			Sleep(5000);

			do
			{
				system("cls");
				cout << "Do you want to play again? ";

				if (Switch) cout << "YES no\n";
				else cout << "yes NO\n";

				cout << "\nFor switch press <-- -->\n";
				cout << "For continue press \"ENTER\"\n\n";

				InputSettings(Switch, key);
			} while (key != 13);

			GameOver = !Switch;
			system("cls");
		}
	} while ((!GameOver) && (key != 27));

	return 0;
}


void Settings(settings &set)
{
	short key = 80; // ????? 
	bool Switch = TRUE; // ?????????? ?????????????

	// ??????? ????????????? ??????? ??? ????????????, ??? ????? ????????
	// ?????? cout << "????????? ?? ?????? ??? (???????) "
	// ? InputSettings(walls(????????? ??? (???????))).

	do
	{
		cout << "Settings:\n";
		cout << "Walls? ";

		if (Switch) cout << "YES no\n";
		else cout << "yes NO\n";

		cout << "\nFor switch press <-- -->\n";
		cout << "For continue press \"ENTER\"\n\n";

		InputSettings(Switch, key);

		system("cls");
	} while (key != 13);
	
	set.walls = Switch;
	
	// ????????? ???????????????
	Switch = TRUE;

	do
	{
		cout << "Settings:\n";
		cout << "Self-crossing? ";

		if (Switch) cout << "YES no\n";
		else cout << "yes NO\n";

		cout << "\nFor switch press <-- -->\n";
		cout << "For continue press \"ENTER\"\n\n";

		InputSettings(Switch, key);

		system("cls");
	} while (key != 13);

	set.SCrossing = Switch;
}


void InputSettings(bool &Switch, short &key)
{
	key = _getch();

	switch (key)
	{
		// ?????
		case 75:
		case 77:
			if (Switch) Switch  = FALSE;
			else Switch = TRUE;
			break;
	}
}


void Setup(bool &GameOver, CoordinatesSnakeField &XYSF, counters &counter, icons &icon, settings &set)
{
	GameOver = FALSE;
	XYSF._x = 0;
	XYSF._y = 1;
	counter.len = 2;
	counter.score = counter.applec = 0;
	//counter.OldApplec = 1; // (???????)
	// iteration = 0;

	// ? Custom mode ????? ???????? ??????? (????? ????????)
	/*
	icon.SumbolField = ' ';
	icon.SumbolWall = '#';
	icon.SumbolSnakeHead = '0';
	icon.SumbolSnakeTrunk = 'o';
	icon.SumbolApple = '@';
	icon.SumbolAppleInside = 'O';
	*/

	set.walls = set.SCrossing = 1;


// ????????? ???? ? ????
	for (int y = 0; y < heightY + 2; y++)
		for (int x = 0; x < widthX + 2; x++)
			if ((y == 0) || (y == heightY + 1) ||
				(x == 0) || (x == widthX + 1)) field[y][x] = SumbolWall;
			else field[y][x] = SumbolField;

			// ????????? ????????? ????????? ???? 
			snakeX[0] = widthX / 2;
			snakeY[0] = heightY / 2;
			snakeX[1] = widthX / 2;
			snakeY[1] = heightY / 2 - 1;

			// ??????? ???? ????????? ? ?????? field
			field[snakeY[0]][snakeX[0]] = SumbolSnakeHead;
			field[snakeY[1]][snakeX[1]] = SumbolSnakeTrunk;

			// ????????? ?????
			Draw(score, len, applec);
			Sleep(5000);
			system("cls");
}


void Draw(const counters &counter)
{
	system("cls");

	// ????? ????
	for (int y = 0; y < heightY + 2; y++)
	{
		for (int x = 0; x < widthX + 2; x++)
			cout << field[y][x];

		cout << '\n';
	}

	// ????? ????????? ????? ? ?????
	cout << '\n';
	cout << "Your score: " << score << '\n';
	cout << "Your lenght: " << len << '\n';
	cout << "You ate " << applec;
	if (applec != 1) cout << " apples.";
	else cout << " apple.";
	cout << '\n';

	// Debag
	/*
	cout << "\n\nKey: " << key << '\n';
	cout << "snakeX[0]: " << snakeX[0] << '\n';
	cout << "snakeY[0]: " << snakeY[0] << '\n';
	cout << "_x: " << _x << '\n';
	cout << "_y: " <<  _y << '\n';
	cout << "appleX: " << appleX << '\n';
	cout << "appleY: " << appleY << '\n';
	cout << "applec: " << applec << '\n';
	cout << "OldApplec: " << OldApplec << '\n';
	cout << "iteration: " << iteration << '\n';
	*/

	// ????? ????????? ???? (??????????)
	cout << "\n    /\\\n";
	cout << "<-- || -->\n";
	cout << "    \\/\n";
	cout << "Press \"P\" to pause.\n";

	// ?????? ?????????, ??????? ? ?????????
	cout << "\n\n";
	cout << "Creator:                   (c) 2016 Esoft."; // excellent
	cout << '\n';
	cout << "Melnichuk Vladislav                 v0.7.4";
	cout << '\n';
}


void Input(bool &GameOver, CoordinatesSnakeField &XYSF)
{
	if (_kbhit())
	{
		unsigned short key = 80; // ??????????? ???? (????-???) ? ?????

		key = getch();

		switch (key)
		{
			// ????? (?? ??????? ? ??????????)
			case 112:
			case 80:
			case 135:
			case 167:
				cout << "Pause\n" << "Press any key to continue\n";
				system("pause");
				break;
			case 27:
				GameOver = TRUE; // ??????? ?????????? "?? ????? ?????? ????? ? ??????? ?????" (YES No)
				break;
		}

		if (key == 224)
		{
			key = getch();

			switch (key)
			{
				// ???? ??????????? ???????? ????
			 	case 75:
			 		if (_x != 1)
			 		{
					   _x = -1;
					   _y = 0;
			        }
					break;
				case 77:
					if (_x != -1)
					{
						_x = 1;
						_y = 0;
					}
					break;
				case 72:
					if (_y != 1)
					{
						_x = 0;
						_y = -1;
					}
					break;
				case 80:
					if (_y != -1)
					{
						_x = 0;
						_y = 1;
					}
					break;
			}
		}
	}
}


void GenerationObjects(const counters &counter, const icons &icon)
{
	// unsigned short OldApplec = 1; // OldApplec = applec - 1 (??? ????????? ?????? ??????) // ???????? ?? AppleX and AppleY = 0

	// ????????? ?????
	if (OldApplec != applec)
	{
		for(;;)
		{
			srand(time(NULL));
		    appleX = rand() % widthX + 1;
			appleY = rand() % heightY + 1;
			
			// ???????? ?? ?????? ??????
			if (field[appleY][appleX] == SumbolField)
			{
				field[appleY][appleX] = SumbolApple;
				break;
			}
		}
		
        OldApplec = applec;
	}
}


void Move(CoordinatesSnakeField &XYSF, const counters &counter, const icons &icon)
{
	unsigned short x, y;

     // ?????????? ?????? ????
	x = snakeX[len - 1];
	y = snakeY[len - 1];
	
	// ??????????? ?????? ???? (????? ?????? ? ??????)
    // ? ?????? ?? ??????????? ?????????? ????????? ?????? ????   
	for (int i = len - 1; i > 0; i--)
	{
		snakeX[i] = snakeX[i - 1];
		snakeY[i] = snakeY[i - 1];
	}
	
	// ??????????? ?????? ????
	snakeX[0] = snakeX[0] + _x;
	snakeY[0] = snakeY[0] + _y;
	
	// ?????????? ??????????? ???? (? ??????? field)
	field[snakeY[0]][snakeX[0]] = SumbolSnakeHead;
	field[snakeY[1]][snakeX[1]] = SumbolSnakeTrunk;
	field[y][x] = SumbolField;
}


void Logic(bool &GameOver, CoordinatesSnakeField &XYSF, CoordinatesObjects XYObj,
		   const settings &set, counters &counter, const icons &icon)
{
	// OldApplec = applec - 1 (??? ????????? ?????? ??????) // ???????? ?? AppleX and AppleY = 0


	// ???????? ??? ???????? ??????
	if ((snakeX[0] == appleX) && (snakeY[0] == appleY))
	{
		len++;
		applec++;
		score = score + 10;
		// ???????? ? ??????? move() or ? ?????
		return;
	}

	// ???????? ??? ???????????????
	if (len > 4)
		for (int i = 4; i < len; i++)
			if ((snakeX[0] == snakeX[i]) && (snakeY[0] == snakeY[i]))
				if (SCrossing)
				{
					GameOver = TRUE;
					return;
				}
				else
				{
					len = i;
					return;
				}

	// ???????? ??? ???????????? ?? ??????
	if (walls)
	{
		if ((snakeX[0] == 0) || (snakeX[0] == widthX + 1) ||
			(snakeY[0] == 0) || (snakeY[0] == heightY + 1))
			GameOver = TRUE;
	}
	else
	{
		if (snakeX[0] == 0)
		{
			field[snakeY[0]][snakeX[0]] = SumbolWall;
			snakeX[0] = widthX;
			field[snakeY[0]][snakeX[0]] = SumbolSnakeHead;
		}
		else if (snakeX[0] == widthX + 1)
		{
			field[snakeY[0]][snakeX[0]] = SumbolWall;
			snakeX[0] = 1;
			field[snakeY[0]][snakeX[0]] = SumbolSnakeHead;
		}
		else if (snakeY[0] == 0)
		{
			field[snakeY[0]][snakeX[0]] = SumbolWall;
			snakeY[0] = heightY;
			field[snakeY[0]][snakeX[0]] = SumbolSnakeHead;
		}
		else if (snakeY[0] == heightY + 1)
		{
			field[snakeY[0]][snakeX[0]] = SumbolWall;
			snakeY[0] = 1;
			field[snakeY[0]][snakeX[0]] = SumbolSnakeHead;
		}
	}
}


void WinFunc() // ???????? ???? ?????? ????????? (0-4)
{

}